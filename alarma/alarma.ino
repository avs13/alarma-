const unsigned char apagado [] PROGMEM = {
  // 'apagado, 40x40px
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x00, 
  0x3f, 0xf9, 0xfc, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x00, 0x00, 0x0f, 0xe7, 0xff, 0x80, 0x00, 0x07, 
  0xef, 0xff, 0x80, 0x00, 0x03, 0xcf, 0xff, 0xc0, 0x00, 0x03, 0xdf, 0xff, 0xc0, 0x00, 0x07, 0xdf, 
  0xff, 0xc0, 0x00, 0x07, 0xdf, 0xff, 0xc0, 0x00, 0x03, 0xdf, 0xff, 0xc0, 0x00, 0x07, 0xcf, 0xff, 
  0xc0, 0x00, 0x07, 0xef, 0xff, 0x80, 0x00, 0x0f, 0xe7, 0xff, 0x80, 0x00, 0x0f, 0xf7, 0xff, 0x00, 
  0x00, 0x1f, 0xf9, 0xfe, 0x00, 0x00, 0x3f, 0xfe, 0x70, 0x00, 0x00, 0xff, 0xff, 0x8f, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 
};
const unsigned char encendido [] PROGMEM = {
  // 'encendido, 40x40px
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x1f, 
  0x1f, 0xf0, 0x00, 0x00, 0x7f, 0xcf, 0xe0, 0x00, 0x00, 0xff, 0xe7, 0xe0, 0x00, 0x01, 0xff, 0xf7, 
  0xc0, 0x00, 0x03, 0xff, 0xf3, 0xc0, 0x00, 0x03, 0xff, 0xfb, 0xc0, 0x00, 0x03, 0xff, 0xfb, 0xc0, 
  0x00, 0x03, 0xff, 0xfb, 0xe0, 0x00, 0x03, 0xff, 0xfb, 0xe0, 0x00, 0x03, 0xff, 0xfb, 0xe0, 0x00, 
  0x03, 0xff, 0xf3, 0xf0, 0x00, 0x01, 0xff, 0xf7, 0xf0, 0x00, 0x00, 0xff, 0xef, 0xf8, 0x00, 0x00, 
  0x7f, 0xdf, 0xfe, 0x00, 0x00, 0x3f, 0xbf, 0xff, 0xc0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char apagado2 [] PROGMEM = {
  // 'apagado, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 
  0xc0, 0x06, 0x03, 0xff, 0xff, 0xe0, 0x0c, 0x00, 0xff, 0xff, 0xf0, 0x18, 0x00, 0x7f, 0xff, 0xf8, 
  0x10, 0x00, 0x7f, 0xff, 0xfc, 0x30, 0x00, 0x3f, 0xff, 0xfc, 0x20, 0x00, 0x3f, 0xff, 0xf8, 0x20, 
  0x00, 0x3f, 0xff, 0xf8, 0x20, 0x00, 0x3f, 0xff, 0xfc, 0x20, 0x00, 0x3f, 0xff, 0xf8, 0x30, 0x00, 
  0x3f, 0xff, 0xf8, 0x10, 0x00, 0x7f, 0xff, 0xf0, 0x18, 0x00, 0x7f, 0xff, 0xf0, 0x08, 0x00, 0xff, 
  0xff, 0xe0, 0x06, 0x01, 0xff, 0xff, 0xc0, 0x01, 0x8f, 0xff, 0xff, 0x00, 0x00, 0x70, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
const unsigned char encendido2 [] PROGMEM = {
  // 'encendido, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0xe0, 
  0xe0, 0x0f, 0xff, 0xff, 0x80, 0x30, 0x1f, 0xff, 0xff, 0x00, 0x18, 0x1f, 0xff, 0xfe, 0x00, 0x08, 
  0x3f, 0xff, 0xfc, 0x00, 0x0c, 0x3f, 0xff, 0xfc, 0x00, 0x04, 0x3f, 0xff, 0xfc, 0x00, 0x04, 0x3f, 
  0xff, 0xfc, 0x00, 0x04, 0x1f, 0xff, 0xfc, 0x00, 0x04, 0x1f, 0xff, 0xfc, 0x00, 0x04, 0x1f, 0xff, 
  0xfc, 0x00, 0x0c, 0x0f, 0xff, 0xfe, 0x00, 0x08, 0x0f, 0xff, 0xff, 0x00, 0x10, 0x07, 0xff, 0xff, 
  0x80, 0x20, 0x01, 0xff, 0xff, 0xc0, 0x40, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char boton [] PROGMEM = {
  // 'boton apagado, 25x25px
  0xff, 0xff, 0xff, 0x80, 0xff, 0xe3, 0xff, 0x80, 0xff, 0x00, 0x7f, 0x80, 0xfc, 0x00, 0x1f, 0x80, 
  0xf8, 0x00, 0x0f, 0x80, 0xf0, 0x08, 0x07, 0x80, 0xe0, 0x08, 0x83, 0x80, 0xe0, 0x2b, 0x01, 0x80, 
  0xc0, 0xeb, 0x81, 0x80, 0xc0, 0xc9, 0xc1, 0x80, 0xc1, 0x80, 0xc0, 0x80, 0xc1, 0x80, 0xc0, 0x80, 
  0xc1, 0x80, 0xc0, 0x80, 0xc1, 0x80, 0xc0, 0x80, 0xc1, 0x80, 0xc0, 0x80, 0xc0, 0xc1, 0xc1, 0x80, 
  0xc0, 0xff, 0x81, 0x80, 0xe0, 0x3f, 0x01, 0x80, 0xe0, 0x00, 0x03, 0x80, 0xf0, 0x00, 0x17, 0x80, 
  0xf8, 0x00, 0x0f, 0x80, 0xfc, 0x00, 0x1f, 0x80, 0xff, 0x00, 0x3f, 0x80, 0xff, 0xc1, 0xff, 0x80, 
  0xff, 0xff, 0xff, 0x80, 
};
const unsigned char boton_encendido [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xcf, 0xcf, 0xef, 0xff, 0xff, 0xcf, 
  0xcf, 0xcf, 0xff, 0xff, 0xe7, 0xcf, 0xcf, 0xff, 0xff, 0xf7, 0xef, 0x9f, 0xff, 0xff, 0xf3, 0xff, 
  0xbf, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xf3, 0xfc, 0x00, 0xff, 0x9f, 0xf1, 0xf8, 0x00, 0x3e, 
  0x3f, 0xfc, 0x70, 0x00, 0x18, 0x7f, 0xff, 0x60, 0x10, 0x09, 0xff, 0xff, 0xc0, 0x54, 0x0f, 0xff, 
  0xff, 0xc0, 0xd6, 0x07, 0xff, 0xff, 0xc1, 0x97, 0x07, 0xff, 0xff, 0x83, 0x03, 0x07, 0xff, 0xc1, 
  0x83, 0x01, 0x06, 0x0f, 0xc0, 0x83, 0x01, 0x86, 0x07, 0xff, 0x83, 0x03, 0x07, 0xff, 0xff, 0x83, 
  0x83, 0x07, 0xff, 0xff, 0xc1, 0xce, 0x07, 0xff, 0xff, 0xc0, 0xfc, 0x07, 0xff, 0xff, 0xe0, 0x30, 
  0x0f, 0xff, 0xfe, 0x60, 0x00, 0x19, 0xff, 0xf8, 0xf0, 0x00, 0x3c, 0xbf, 0xf1, 0xf8, 0x00, 0x7f, 
  0x1f, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xbf, 0xff, 0xff, 0xf3, 0xff, 0x9f, 0xff, 
  0xff, 0xe7, 0xcf, 0x9f, 0xff, 0xff, 0xe7, 0xcf, 0xcf, 0xff, 0xff, 0xcf, 0xcf, 0xcf, 0xff, 0xff, 
  0xdf, 0xcf, 0xef, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char cargando1 [] PROGMEM = {
  // 'parte1, 20x20px
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xfb, 0x80, 0x07, 0xff, 0x80, 0x0f, 0x0f, 0xc0, 0x0c, 
  0x0f, 0xc0, 0x1c, 0x0f, 0xc0, 0x18, 0x1f, 0xc0, 0x38, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
  0xc0, 0x00, 0x80, 0xc0, 0x3f, 0x81, 0xc0, 0x3f, 0x03, 0x80, 0x1f, 0x07, 0x80, 0x1f, 0xff, 0x00, 
  0x0f, 0xfc, 0x00, 0x0c, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char cargando2 [] PROGMEM = {
  // 'cargando parte 2, 20x20px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x10, 0x00, 0x0f, 0x3c, 0x00, 0x3f, 0x1f, 0x00, 0x7f, 
  0x07, 0x80, 0x1f, 0x01, 0x80, 0x1f, 0x01, 0xc0, 0x19, 0x80, 0xc0, 0x18, 0x00, 0xc0, 0x38, 0x00, 
  0xc0, 0x18, 0x08, 0xc0, 0x18, 0x0f, 0xc0, 0x1c, 0x0f, 0x80, 0x0e, 0x0f, 0xc0, 0x0f, 0x0f, 0xe0, 
  0x07, 0xcf, 0xc0, 0x01, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char configuracion2 [] PROGMEM = {
  // 'descarga (1), 40x40px
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
  0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xfe, 
  0x00, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xfc, 0xf8, 0x00, 0x1f, 0x3f, 0xf8, 0x00, 0xff, 
  0x00, 0x1f, 0xf8, 0x03, 0xff, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xe0, 0x0f, 0xf0, 0x0f, 0xff, 0xf0, 
  0x0f, 0xe0, 0x1f, 0x81, 0xf8, 0x07, 0xe0, 0x3e, 0x00, 0x78, 0x07, 0xf0, 0x3c, 0x3c, 0x3c, 0x0f, 
  0xf8, 0x7c, 0x7e, 0x3c, 0x1f, 0xfc, 0x78, 0xff, 0x1e, 0x3f, 0xfe, 0x79, 0xff, 0x9e, 0x3f, 0xfe, 
  0x79, 0xff, 0x9e, 0x3f, 0xfe, 0x79, 0xff, 0x9e, 0x3f, 0xfe, 0x79, 0xff, 0x9e, 0x3f, 0xfc, 0x78, 
  0xff, 0x1c, 0x3f, 0xf8, 0x7c, 0x7e, 0x1c, 0x1f, 0xf0, 0x3c, 0x3c, 0x3c, 0x0f, 0xe0, 0x3e, 0x00, 
  0x78, 0x07, 0xe0, 0x1f, 0x80, 0xf8, 0x07, 0xf0, 0x0f, 0xff, 0xf0, 0x07, 0xf0, 0x07, 0xff, 0xe0, 
  0x0f, 0xf8, 0x01, 0xff, 0x80, 0x1f, 0xf8, 0x00, 0x7e, 0x00, 0x1f, 0xfc, 0xf8, 0x00, 0x1f, 0x3f, 
  0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
  0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char configuracion [] PROGMEM = {
  // 'descarga (1), 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x01, 
  0xff, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0x03, 0x07, 0xff, 0xe0, 0xc0, 0x07, 0xff, 0x00, 
  0xff, 0xe0, 0x07, 0xfc, 0x00, 0x3f, 0xe0, 0x0f, 0xf8, 0x00, 0x1f, 0xf0, 0x0f, 0xf0, 0x00, 0x0f, 
  0xf0, 0x1f, 0xe0, 0x7e, 0x07, 0xf8, 0x1f, 0xc1, 0xff, 0x87, 0xf8, 0x0f, 0xc3, 0xc3, 0xc3, 0xf0, 
  0x07, 0x83, 0x81, 0xc3, 0xe0, 0x03, 0x87, 0x00, 0xe1, 0xc0, 0x01, 0x86, 0x00, 0x61, 0xc0, 0x01, 
  0x86, 0x00, 0x61, 0xc0, 0x01, 0x86, 0x00, 0x61, 0xc0, 0x01, 0x86, 0x00, 0x61, 0xc0, 0x03, 0x87, 
  0x00, 0xe3, 0xc0, 0x07, 0x83, 0x81, 0xe3, 0xe0, 0x0f, 0xc3, 0xc3, 0xc3, 0xf0, 0x1f, 0xc1, 0xff, 
  0x87, 0xf8, 0x1f, 0xe0, 0x7f, 0x07, 0xf8, 0x0f, 0xf0, 0x00, 0x0f, 0xf8, 0x0f, 0xf8, 0x00, 0x1f, 
  0xf0, 0x07, 0xfe, 0x00, 0x7f, 0xe0, 0x07, 0xff, 0x81, 0xff, 0xe0, 0x03, 0x07, 0xff, 0xe0, 0xc0, 
  0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char mas2 [] PROGMEM = {
  // '217666, 40x40px
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x80, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x00, 
  0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 
  0xe0, 0x3f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 
  0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 
  0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 
  0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0x83, 0xf0, 0x1f, 0xf0, 0x3f, 
  0x03, 0xf0, 0x1f, 0xf0, 0x3e, 0x01, 0xf0, 0x1f, 0xf0, 0x3e, 0x01, 0xf0, 0x1f, 0xf0, 0x3e, 0x01, 
  0xf0, 0x1f, 0xf0, 0x3f, 0x03, 0xf0, 0x1f, 0xf0, 0x3f, 0x83, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 
  0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 
  0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xf0, 0x0f, 0xff, 0xc0, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0xf8, 
  0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xff
};
const unsigned char mas [] PROGMEM = {
  // '217666, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7f, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 
  0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xe0, 0x00, 
  0x1f, 0xc0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 
  0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 
  0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 
  0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x7c, 0x0f, 0xe0, 0x0f, 0xc0, 
  0xfc, 0x0f, 0xe0, 0x0f, 0xc1, 0xfe, 0x0f, 0xe0, 0x0f, 0xc1, 0xfe, 0x0f, 0xe0, 0x0f, 0xc1, 0xfe, 
  0x0f, 0xe0, 0x0f, 0xc0, 0xfc, 0x0f, 0xe0, 0x0f, 0xc0, 0x7c, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 
  0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xc0, 0x00, 0x0f, 0xe0, 
  0x0f, 0xc0, 0x00, 0x0f, 0xe0, 0x0f, 0xf0, 0x00, 0x3f, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xc0, 0x07, 
  0xff, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 
  0xff, 0xfc, 0x00,
};
const unsigned char dispositivo2 [] PROGMEM = {
  // 'descarga (2), 40x40px
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 
  0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0x0e, 0x00, 0x00, 0x00, 0x70, 0x0e, 0x00, 0x00, 0x00, 
  0x70, 0xfe, 0x00, 0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x70, 0xff, 0xe0, 0x00, 0x00, 0x70, 
  0x1f, 0xf8, 0x00, 0x00, 0x70, 0x01, 0xfc, 0x00, 0x00, 0x70, 0x00, 0x7e, 0x00, 0x00, 0x70, 0x00, 
  0x1f, 0x80, 0x00, 0x70, 0xf0, 0x0f, 0xc0, 0x00, 0x70, 0xfe, 0x03, 0xc0, 0x00, 0x70, 0xff, 0x83, 
  0xe0, 0x00, 0x70, 0xff, 0xc1, 0xf0, 0x00, 0x70, 0x07, 0xe0, 0xf0, 0x00, 0x70, 0x01, 0xf0, 0x78, 
  0x00, 0x70, 0x00, 0xf8, 0x78, 0x00, 0x70, 0xc0, 0x7c, 0x3c, 0x00, 0x70, 0xf8, 0x3c, 0x3c, 0x00, 
  0x70, 0xfc, 0x1e, 0x1f, 0xff, 0xf0, 0xfe, 0x1e, 0x1f, 0xff, 0xf0, 0x1f, 0x0f, 0x1f, 0xff, 0xf0, 
  0x0f, 0x0f, 0x0f, 0xff, 0xf0, 0x07, 0x8f, 0x0f, 0x00, 0x00, 0x07, 0x87, 0x0f, 0x00, 0x00, 0x07, 
  0x87, 0x0f, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char dispositivo [] PROGMEM = {
  // 'descarga (2), 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 
  0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0xf1, 0xff, 0xff, 0xff, 0x8f, 0xf1, 0xff, 0xff, 0xff, 
  0x8f, 0x01, 0xff, 0xff, 0xff, 0x8f, 0x00, 0x7f, 0xff, 0xff, 0x8f, 0x00, 0x1f, 0xff, 0xff, 0x8f, 
  0xe0, 0x07, 0xff, 0xff, 0x8f, 0xfe, 0x03, 0xff, 0xff, 0x8f, 0xff, 0x81, 0xff, 0xff, 0x8f, 0xff, 
  0xe0, 0x7f, 0xff, 0x8f, 0x0f, 0xf0, 0x3f, 0xff, 0x8f, 0x01, 0xfc, 0x3f, 0xff, 0x8f, 0x00, 0x7c, 
  0x1f, 0xff, 0x8f, 0x00, 0x3e, 0x0f, 0xff, 0x8f, 0xf8, 0x1f, 0x0f, 0xff, 0x8f, 0xfe, 0x0f, 0x87, 
  0xff, 0x8f, 0xff, 0x07, 0x87, 0xff, 0x8f, 0x3f, 0x83, 0xc3, 0xff, 0x8f, 0x07, 0xc3, 0xc3, 0xff, 
  0x8f, 0x03, 0xe1, 0xe0, 0x00, 0x0f, 0x01, 0xe1, 0xe0, 0x00, 0x0f, 0xe0, 0xf0, 0xe0, 0x00, 0x0f, 
  0xf0, 0xf0, 0xf0, 0x00, 0x0f, 0xf8, 0x70, 0xf0, 0xff, 0xff, 0xf8, 0x78, 0xf0, 0xff, 0xff, 0xf8, 
  0x78, 0xf0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
#include <SPI.h>
#include <RF24.h>
#include <Wire.h>
#include <Adafruit_GFX.h>   
#include <Adafruit_SSD1306.h> 
#include <EEPROM.h>

#define ANCHO             128
#define ALTO              64    
#define OLED_RESET        4
#define CE_PIN            9
#define CSN_PIN           10
#define UP                2
#define ENTER             3
#define DOWN              4
byte direccion[5] ={1,1,1,1,1};
RF24 radio(CE_PIN, CSN_PIN);
Adafruit_SSD1306 oled(ANCHO, ALTO, &Wire, OLED_RESET);
int menuPos = 1;
int tiempo = 0;
boolean estado = 0;
int sub_menu = 0;
int sub_menu2 = 1;
int submenu = 1;
int sub = 0;

void setup() {
  Serial.begin(9600);
  Wire.begin(); 
  oled.begin(SSD1306_SWITCHCAPVCC, 0x3C);
//  radio.begin();
  pinMode(2,INPUT);
  pinMode(3,INPUT);
  pinMode(4,INPUT);
  pinMode(5,INPUT);
 // inicio();
 menu(menuPos);
//  radio.openWritingPipe(direccion);
}
void loop() {
button();
}
void menu(int posicion) {
  switch(posicion){
    case 0:
    menuPos = 1;
    Serial.println(menuPos);
    
    break;
    case 1:
    oled.clearDisplay();      
    oled.setTextColor(WHITE);   
    oled.setTextSize(1);      
    oled.setCursor(0, 0);     
    oled.drawBitmap(41,20,mas,40,40,WHITE);
    oled.drawBitmap(0,20,configuracion2,40,40,WHITE);
   oled.drawBitmap(81,20,dispositivo,40,40,WHITE);
    oled.display();
       Serial.println(menuPos);     
    break;

    case 2:
      oled.clearDisplay();      
      oled.setTextColor(WHITE);   
      oled.setTextSize(1);      
      oled.setCursor(0, 0);     
      oled.drawBitmap(41,20,mas2,40,40,WHITE);
      oled.drawBitmap(0,20,configuracion,40,40,WHITE);
      oled.drawBitmap(81,20,dispositivo,40,40,WHITE); 
      oled.display();     
      Serial.println(menuPos);
    break;

    case 3:
       oled.clearDisplay();      
      oled.setTextColor(WHITE);   
      oled.setTextSize(1);      
      oled.setCursor(0, 0);     
      oled.drawBitmap(41,20,mas,40,40,WHITE);
      oled.drawBitmap(0,20,configuracion,40,40,WHITE);
      oled.drawBitmap(81,20,dispositivo2,40,40,WHITE); 
      oled.display();     
      Serial.println(menuPos);
    break;
   
    case 4:
    oled.clearDisplay();      
    oled.setTextColor(WHITE);    
    oled.setTextSize(2);      
    
     
    if(estado == 0){
      oled.setCursor(48, 0); 
      oled.print("OFF");
      oled.drawBitmap(42,20,apagado2,40,40,WHITE);
    }
    else{
      oled.setCursor(52, 0);
      oled.print("ON");
      oled.drawBitmap(42,20,encendido2,40,40,WHITE);
    }
    oled.display();     
    break;
    case 5:
    menuPos = 4;
    break;
  }
}

void inicio(){
    oled.clearDisplay();      
    oled.setTextColor(WHITE);    
    oled.setTextSize(2);      
    oled.setCursor(5, 0);     
    oled.print("Bienvenido"); 
     oled.setCursor(10, 20);     
    oled.print("S.M.P.D.N ");
    oled.display();     
   
    delay(3000);
     oled.clearDisplay();      
    oled.setTextColor(WHITE);    
    oled.setTextSize(2);      
     oled.setCursor(5, 20);     
    oled.print("Sistema de Monitoreo");
    oled.display();     
   
  
}

void button(){
  if(digitalRead(UP) == HIGH){
    if(sub_menu == 0){
    menuPos = menuPos - 1;
    menu(menuPos);  
    Serial.println("UP"); 
    delay(100);
    } 
  
    else{
      sub_menu2 = sub_menu2 - 1;
      subMenu();
    }
    
    while(1){
      if(digitalRead(UP) == LOW){
        tone(5,4000,50);
        break;
      }
     /* if(tiempo >= 2000){
        tiempo = 0;
        tone(5,4000,50);
        break;
      } 
      tiempo = tiempo + 10;
      delay(10);*/
    }
  }
  // boton "ENTER"
  if(digitalRead(ENTER) == HIGH){
    Enter();
    delay(100);
    while(1){
      if(digitalRead(ENTER) == LOW){
        tone(5,4000,50);
        break;
      }
      if(tiempo >= 2000){
        tiempo = 0;
        tone(5,4000,50);
        break;
      }
      tiempo = tiempo + 10;
    delay(10);
   }
   
  }


  //  boton Down
  if(digitalRead(DOWN) == HIGH){
    if(sub_menu == 0){
    menuPos = menuPos + 1;
    menu(menuPos); 
    }
    else{
      sub_menu2  = sub_menu2 + 1;
      subMenu();
    }
    delay(100);
    
    Serial.println("DOWN");
    while(1){
      if(digitalRead(DOWN) == LOW){
        tone(5,4000,50);
        break;
      }
      /*if(tiempo >= 2000){
        tiempo = 0;
        tone(5,4000,50);
        break;
      }
      tiempo = tiempo + 10;
      delay(10);*/
   }
    
  }
}
/*void envio(){
   bool ok = radio.write(datos, sizeof(datos));
   if(ok)
  {
     Serial.print("Datos enviados: "); 
     Serial.print(datos[0]); 
     Serial.print(" , "); 
     Serial.print(datos[1]); 
     Serial.print(" , "); 
     Serial.println(datos[2]); 
  }
  else
  {
     Serial.println("no se ha podido enviar");
  } 3ssa
  delay(100);
}*/
/*void calibracion(){
}*/
void Enter(){
  if(menuPos == 1){
    sub_menu = 1;
    if(sub_menu2 == 3){
     sub_menu = 0;
     sub_menu2 = 1;
     menu(menuPos);  
    }
    else{
    subMenu();
    }
  }
  if(menuPos == 2){
    sub_menu = 2;
    subMenu();
  }
  
  if(menuPos == 3){
    oled.clearDisplay();      
    oled.setTextColor(WHITE);    
    oled.setTextSize(1);      
    oled.setCursor(42, 0);     
    oled.print("Buscando"); 
    oled.setCursor(20, 20);     
    oled.print("Dispositivos...");
    oled.display();
     while(1){
       oled.clearDisplay();      
       oled.setTextColor(WHITE);    
       oled.setTextSize(1);      
       oled.setCursor(42, 0);     
       oled.print("Buscando"); 
       oled.setCursor(20, 20);     
       oled.print("Dispositivos...");
       oled.drawBitmap(54,40,cargando1,20,20,WHITE);
       oled.display();
       delay(500);
       oled.clearDisplay();      
       oled.setTextColor(WHITE);    
       oled.setTextSize(1);      
       oled.setCursor(42, 0);     
       oled.print("Buscando"); 
       oled.setCursor(20, 20);     
       oled.print("Dispositivos...");
       oled.drawBitmap(54,40,cargando2,20,20,WHITE);
       oled.display();
       delay(500);
       if(digitalRead(3) == HIGH){
        tone(5,4000,50);
        menuPos = 1;
        menu(menuPos);
        break;
       }
    }
  }
  
  
  if(menuPos == 4){
    if(estado == 0) {estado = 1;}
    else{
      estado = 0;
    }
    menu(menuPos);
  }
}
void subMenu(){
  switch(sub_menu){
    case 1: 
      configuraciones();
    break;
    
    case 2:
      switch(sub_menu2){
        case 0:
          sub_menu = 1;
        break;
        case 1:
          oled.clearDisplay();      
          oled.setTextColor(WHITE);    
          oled.setTextSize(1);      
          oled.setCursor(0, 0);     
          oled.print("Dispositivo 1"); 
          oled.setCursor(0, 20);     
          oled.print("S.M.P.D.N ");
          oled.display();   
        break;
          oled.clearDisplay();      
          oled.setTextColor(WHITE);    
          oled.setTextSize(1);      
          oled.setCursor(0, 0);     
          oled.print("dispositivo 2"); 
          oled.setCursor(0, 20);     
          oled.print("S.M.P.D.N ");
          oled.display();  
        case 2: 
          oled.clearDisplay();      
          oled.setTextColor(WHITE);    
          oled.setTextSize(1);      
          oled.setCursor(0, 0);     
          oled.print("dispositivo 3"); 
          oled.setCursor(0, 20);     
          oled.print("S.M.P.D.N ");
          oled.display();  
        break;
        case 3:
          sub_menu = 2;
        break;
    }
    break;
  }
}
void configuraciones(){
  switch(sub_menu2){
        case 0:
          sub_menu = 1;
        break;
        
        case 1:
          oled.clearDisplay();      
          oled.setTextColor(WHITE);    
          oled.setTextSize(1);      
          oled.setCursor(05, 0);     
          oled.print("> ajuste 1"); 
          oled.setCursor(0, 20);     
          oled.print("  ajuste 2");
          oled.display();  
          Serial.println("case1");
        break;

        case 2:
          oled.clearDisplay();      
          oled.setTextColor(WHITE);    
          oled.setTextSize(1);      
          oled.setCursor(0, 0);     
          oled.print("> ajuste 2"); 
          oled.setCursor(0, 20);     
          oled.print(" ajuste 3");
          oled.display();  
          Serial.println("case2");
        break;
        
        case 3:
          oled.clearDisplay();      
          oled.setTextColor(WHITE);    
          oled.setTextSize(1);      
          oled.setCursor(0, 0);     
          oled.print("> ajuste 3"); 
          oled.setCursor(0, 20);     
          oled.print("  ajuste 4 ");
          oled.display();
          Serial.println("case3");
        break;
        
        case 4:
          sub_menu = 3;
        break;
      }
}
